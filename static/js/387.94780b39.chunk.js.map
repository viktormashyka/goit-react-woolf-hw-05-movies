{"version":3,"file":"static/js/387.94780b39.chunk.js","mappings":"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","sources":["api/api-config.js","api/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx"],"sourcesContent":["export const API_KEY = '857288c3c5f42347171bc7541b9a4b57';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './api-config';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrendingMoviesToday = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesByTitle = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCreditsById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviewsById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ImageContainer = styled.div`\n  width: 200px;\n  height: auto;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 200px;\n  height: 300;\n  object-fit: contain;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCreditsById } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Image, List, Item, ImageContainer, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!movieId) return;\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMovieCreditsById(movieId);\n\n        setCast(cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <Loader />}\n      {!error && !isLoading && cast.length > 0 ? (\n        <List>\n          {cast.map(el => (\n            <Item key={el.id}>\n              <ImageContainer>\n                {el.profile_path ? (\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                    alt=\"\"\n                  />\n                ) : (\n                  <Image src=\"https://via.placeholder.com/100x150\" alt=\"\" />\n                )}\n              </ImageContainer>\n\n              <Text>{el.name}</Text>\n              <Text>Character: {el.character}</Text>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Text>We don't have cast details fot this movie</Text>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MagnifyingGlass\n        visible={true}\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"magnifying-glass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"magnifying-glass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </LoaderWrapper>\n  );\n};\n"],"names":["API_KEY","axios","fetchTrendingMoviesToday","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesByTitle","_ref2","_callee2","query","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCreditsById","_ref4","_callee4","_context4","_x3","fetchMovieReviewsById","_ref5","_callee5","_context5","_x4","ImageContainer","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","Text","_templateObject3","List","_templateObject4","Item","_templateObject5","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useParams","useEffect","_fetchData","_yield$fetchMovieCred","_cast","t0","finish","fetchData","_jsxs","_Fragment","children","message","_jsx","Loader","length","map","el","profile_path","src","alt","name","character","id","LoaderWrapper","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color"],"sourceRoot":""}